# prepend_path PATH "${HOME}/.local-stack/bin"
prepend_path PATH "$HOME/.xmonad/bin"
prepend_path PATH "$HOME/.cabal/bin"
prepend_path PATH "$HOME/.cargo/bin"
prepend_path PATH "$HOME/.pub-cache/bin"

prepend_path PATH "$HOME/fvm/default/bin"

if [ -z "${GOPATH:-}" ]; then
    export GOPATH="$HOME/go"
fi
prepend_path PATH "${GOPATH}/bin"

if command -v bat >/dev/null; then
    export BAT_PAGER="less -RF"
    export MANPAGER="sh -c 'col -b | bat -l man -p'"
fi

PYTHONPATH="$HOME/.local/lib/python$(get_python_version)/site-packages${PYTHONPATH:+:${PYTHONPATH}}"
export PYTHONPATH

alias restic-mimir="restic -r sftp:$USER@zqnr.de:backup/restic/mimir --password-command=\"op item get 3kvwprrtuezerlo6oofod6re3q --fields password\""
alias setup_1password="op signin --account freiheit > ~/.op/session; source ~/.op/session"
alias rblm='rev-backlog -m -c'

CHROME_EXECUTABLE="$(which google-chrome-stable)"
export CHROME_EXECUTABLE

set_home() {
    browser_set_firefox
    wiki_set_private
}

set_work() {
    browser_set_chrome_auto_profile
    wiki_set_work
}

reset_webcam() {
    sudo reset_usb 1bcf:2cb4
}

# create a new branch from any story
git-branch-backlog() { # [--rev|--jira] <args for rev-backlog>
    local id
    local arg_id="--rev"

    if (( $# > 0 )); then
        case "$1" in
            "-j"|"--jira")
                arg_id=--jira
                shift 1
                ;;
            "-r"|"--rev")
                arg_id=--rev
                shift 1
                ;;
        esac
    fi
    id=$(revcli backlog query "$@" "$arg_id")

    local branch
    if ! branch=$(git-branch-name); then
        return 1
    fi

    git checkout -b "ojb/$id/$branch" "origin/$(git-origin-name)"
}

git-branch-name() {
    local tmp=/tmp/git-branch-name
    local new_branch_name
    if new_branch_name=$(gum input --placeholder "branch name" --value "$([ -f "$tmp" ] && tr -d '\n' <"$tmp")"); then
        tee "$tmp" <<<"$new_branch_name"
    else
        return $?
    fi
}

# create a new branch
git-branch-story() { # [--rev|--jira]
    local id
    local arg_id="--rev"

    if (( $# > 0 )); then
        case "$1" in
            "-j"|"--jira")
                arg_id=--jira
                shift 1
                ;;
            "-r"|"--rev")
                arg_id=--rev
                shift 1
                ;;
        esac
    fi

    id=$(revcli stories "$arg_id")

    local branch
    if ! branch=$(git-branch-name); then
        return 1
    fi

    git checkout -b "ojb/$id/$branch" "origin/$(git-origin-name)"
}
alias gbs=git-branch-story

# create a new branch
git-branch-nostory() {
    local branch
    if ! branch=$(git-branch-name); then
        return 1
    fi

    git switch -c "ojb/nostory/$branch" "origin/$(git-origin-name)"
}
#
# create a new branch
git-story-open() {
    rev-backlog -j "$(git-branch-jira-id)" -w
}

image-flutter() {
    grep -A 1 '"flutter-web"' "$(git rev-parse --show-toplevel)/Jenkinsfile" | tail -n 1 | awk '{print $2}' | tr -d "','"
}

source "$HOME/doc-fdc/scripts/custom.zsh"

# vim: ft=sh
