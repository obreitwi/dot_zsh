# setting some default values
NOCOR=${NOCOR:-0}
NOMENU=${NOMENU:-0}
NOPRECMD=${NOPRECMD:-0}
COMMAND_NOT_FOUND=${COMMAND_NOT_FOUND:-0}
GRML_ZSH_CNF_HANDLER=${GRML_ZSH_CNF_HANDLER:-/usr/share/command-not-found/command-not-found}
BATTERY=${BATTERY:-0}
GRMLSMALL_SPECIFIC=${GRMLSMALL_SPECIFIC:-1}
GRML_ALWAYS_LOAD_ALL=${GRML_ALWAYS_LOAD_ALL:-0}
ZSH_NO_DEFAULT_LOCALE=${ZSH_NO_DEFAULT_LOCALE:-0}

# needed for locale support in nix on other distros
export LOCALE_ARCHIVE=/usr/lib/locale/locale-archive

# Fix gibberish characters in bat if used as manpager, https://github.com/sharkdp/bat/issues/2593#issuecomment-1636468711
export MANROFFOPT='-c'

if [ -n "${MANPATH:-}" ]; then
    export MANPATH="$(manpath -g)"
fi

if command -v bat>/dev/null; then
    # Have manpages colored
    export MANPAGER="sh -c 'col -bx | bat -l man -p'"
fi

# Enable SudoWrite in neovim:
if [ -z "${SUDO_ASKPASS:-}" ] && [ -e /usr/lib/ssh/ssh-askpass ]; then
    export SUDO_ASKPASS=/usr/lib/ssh/ssh-askpass
fi

if command -v bat >/dev/null; then
    export BAT_PAGER="less -RF"
    export MANPAGER="sh -c 'col -b | bat -l man -p'"
fi

# # switch modes in 0.1 seconds
# export KEYTIMEOUT=1

export KEYTIMEOUT=20

if [ -f "$(command -v nvim)" ]; then
    export EDITOR="nvim"
else
    export EDITOR="vim"
fi

export VIRTUAL_ENV_DISABLE_PROMPT="true"

# force zsh to be looked up (useful for singularity containers)
if command -v zsh >/dev/null; then
    export SHELL=$(command -v zsh)
else
    export SHELL="/opt/shell/zsh"
fi

# Set GPG TTY
export GPG_TTY=$(tty)

# Refresh gpg-agent tty in case user switches into an X session
if pgrep gpg-agent >/dev/null && command -v gpg-connect-agent 2>&1 >/dev/null; then
    gpg-connect-agent updatestartuptty /bye >/dev/null
fi

if [[ "${COLORTERM:-}" == "rxvt" ]]\
        && command -v pacman 2>&1 >/dev/null\
        && pacman -Qsq rxvt-unicode-truecolor >/dev/null; then
    export COLORTERM=truecolor
elif [[ "${TERM:-}" == "alacritty" ]]; then
    export COLORTERM=truecolor
fi

if command -v readlink>/dev/null && [[ "$(readlink -m /etc/locatime)" == "/usr/share/zoneinfo/Etc/UTC" ]] && [ -z "${TZ:-}" ]; then
    export TZ=/usr/share/zoneinfo/Europe/Berlin
fi

if command -v fasd &>/dev/null && command -v fzf &>/dev/null; then
    # show recent folders on ctrl-t
    export FZF_CTRL_T_COMMAND="fasd -al"
fi

# setup ccache if exists
if command -v ccache >/dev/null; then
    prepend_path PATH /usr/lib/ccache/bin
fi

if [ -d "$HOME/.ghcup/bin" ]; then
    prepend_path PATH "$HOME/.ghcup/bin"
fi

if [ -d $HOME/.local/share/gem/ruby/3.0.0/bin ]; then
    prepend_path PATH $HOME/.local/share/gem/ruby/3.0.0/bin
fi

# This is used for auto_cmd
# CDPATH=.:..:~

# Less Colors for Man Pages
# export_path LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
# export_path LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
# export_path LESS_TERMCAP_me=$'\E[0m'           # end mode
# export_path LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
# export_path LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
# export_path LESS_TERMCAP_ue=$'\E[0m'           # end underline
# export_path LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

# export_path GREP_OPTIONS="--color=auto"

# vidir arguments
export VIDIR_EDITOR_ARGS='-c :set nolist | :set ft=vidir-ls'

#VISIONS PATHS
#  if [ $HOST = Styx ]; then
	#  export_path VISION_OFFSET_PATH=$HOME/Documents/Project/Vision
#  else
	#  export_path VISION_OFFSET_PATH=$HOME/project
#  fi

#  export_path SYMAP2IC_PATH=$VISION_OFFSET_PATH/symap2ic
#  export_path FPGASYSTEM_PATH=$SYMAP2IC_PATH/components/fpgasystem
#  export_path FPGASYSTEMPATH=$FPGASYSTEM_PATH
#  export_path SPIKEYHAL_PATH=$SYMAP2IC_PATH/components/SpikeyHAL
#  export_path SPIKEYHALPATH=$SPIKEYHAL_PATH
#  export_path SCTRL_PATH=$SYMAP2IC_PATH/components/SCtrlTP/userspace
#  export_path SCTRLPATH=$SCTRL_PATH
#  export_path PYNNHW_PATH=$SYMAP2IC_PATH/components/pynnhwGM/src/hardware
#  export_path PYNN_HW_PATH=$PYNNHW_PATH
#  export_path COMMPATH=$SYMAP2IC_PATH/components/common
#  export_path WDPATH=$COMMPATH/windriver621
#  export_path CONFIGTOOL_PATH=$PYNN_HW_PATH/stage2/ConfigTool
#  export_path QTPATH=/usr/include/qt3
#  export_path QTDIR=/usr/include/qt3
#  export_path BOOSTINC=/usr/include/boost
#  export_path PYTHONINC=/usr/include/python2.5
#  export_path BOOSTVERSION=boost_python-mt-py25
#  export_path LD_LIBRARY_PATH=$PYNNHW_PATH/basics/:$LD_LIBRARY_PATH
#  export_path LIQUID_PATH=$SYMAP2IC_PATH/components/PyNN-Scripts/liquid_computing_stage1

#  export_path PYTHONPATH=$PYNNHW_PATH/stage1gm2/pyhal:$PYNNHW_PATH/stage2/pyhal:$PYTHONPATH

#KIP Proxy
#export_path ftp_proxy="proxy.kip.uni-heidelberg.de:8080"
#export_path https_proxy="https://proxy.kip.uni-heidelberg.de:8080"
#export_path http_proxy="http://proxy.kip.uni-heidelberg.de:8080"
#export_path socks_proxy="socks://proxy.kip.uni-heidelberg.de:1080"

# vim: ft=zsh
