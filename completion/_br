#compdef br

autoload -U is-at-least

_br() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'--outcmd=[Where to write the produced cmd (if any)]' \
'-c+[Semicolon separated commands to execute]' \
'--cmd=[Semicolon separated commands to execute]' \
'--color=[Whether to have styles and colors (auto is default and usually OK)]: :(yes no auto)' \
'--conf=[Semicolon separated paths to specific config files]' \
'--height=[Height (if you don'\''t want to fill the screen or for file export)]' \
'-o+[Where to write the produced path (if any)]' \
'--out=[Where to write the produced path (if any)]' \
'--set-install-state=[Set the installation state (for use in install script)]: :(undefined refused installed)' \
'--print-shell-function=[Print to stdout the br function for a given shell]' \
'--listen=[Listen for commands]' \
'--send=[send commands to a remote broot then quits]' \
'-d[Show the last modified date of files and directories]' \
'--dates[Show the last modified date of files and directories]' \
'-D[Don'\''t show last modified date]' \
'--no-dates[Don'\''t show last modified date]' \
'-f[Only show folders]' \
'--only-folders[Only show folders]' \
'-F[Show folders and files alike]' \
'--no-only-folders[Show folders and files alike]' \
'--show-root-fs[Show filesystem info on top]' \
'-g[Show git statuses on files and stats on repo]' \
'--show-git-info[Show git statuses on files and stats on repo]' \
'-G[Don'\''t show git statuses on files]' \
'--no-show-git-info[Don'\''t show git statuses on files]' \
'--git-status[Only show files having an interesting git status, including hidden ones]' \
'-h[Show hidden files]' \
'--hidden[Show hidden files]' \
'-H[Don'\''t show hidden files]' \
'--no-hidden[Don'\''t show hidden files]' \
'-i[Show files which should be ignored according to git]' \
'--show-gitignored[Show files which should be ignored according to git]' \
'-I[Don'\''t show gitignored files]' \
'--no-show-gitignored[Don'\''t show gitignored files]' \
'-p[Show permissions, with owner and group]' \
'--permissions[Show permissions, with owner and group]' \
'-P[Don'\''t show permissions]' \
'--no-permissions[Don'\''t show permissions]' \
'-s[Show the size of files and directories]' \
'--sizes[Show the size of files and directories]' \
'-S[Don'\''t show sizes]' \
'--no-sizes[Don'\''t show sizes]' \
'--sort-by-count[Sort by count (only show one level of the tree)]' \
'--sort-by-date[Sort by date (only show one level of the tree)]' \
'--sort-by-size[Sort by size (only show one level of the tree)]' \
'-w[Sort by size, show ignored and hidden files]' \
'--whale-spotting[Sort by size, show ignored and hidden files]' \
'--no-sort[Don'\''t sort]' \
'-t[Trim the root too and don'\''t show a scrollbar]' \
'--trim-root[Trim the root too and don'\''t show a scrollbar]' \
'-T[Don'\''t trim the root level, show a scrollbar]' \
'--no-trim-root[Don'\''t trim the root level, show a scrollbar]' \
'--install[Install or reinstall the br shell function]' \
'--get-root[Ask for the current root of the remote broot]' \
'--help[Prints help information]' \
'-V[Prints version information]' \
'--version[Prints version information]' \
'::ROOT -- sets the root directory:_files' \
&& ret=0
    
}

(( $+functions[_br_commands] )) ||
_br_commands() {
    local commands; commands=(
        
    )
    _describe -t commands 'br commands' commands "$@"
}

_br "$@"